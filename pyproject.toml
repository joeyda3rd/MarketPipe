[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "marketpipe"
version = "0.1.0"
description = "Modern, Python-native ETL framework for financial market data workflows with Domain-Driven Design"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [{name = "MarketPipe"}]
requires-python = ">=3.9"
dependencies = [
    # CLI framework
    "typer>=0.9.0",
    "rich>=10.11.0",  # For colorful terminal output
    "shellingham>=1.3.0",  # For shell detection

    # Data processing
    "pandas>=2.0.0",
    "duckdb>=1.0.0",
    "pyarrow>=12.0.0",

    # HTTP clients
    "httpx>=0.24.0",
    "requests>=2.28.0",

    # Configuration and utilities
    "pyyaml>=6.0.0",
    "python-dotenv>=1.0.0",
    "humanize>=4.0.0",

    # Database support
    "aiosqlite>=0.19.0",
    "alembic>=1.13.0",
    "sqlalchemy>=2.0.0",
    "greenlet>=2.0.0",

    # Monitoring and validation
    "prometheus_client>=0.15.0",
    "pydantic>=2.0.0",

    # Utilities
    "fasteners>=0.18.0",
]

[project.optional-dependencies]
# Core testing dependencies - required for basic test suite
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.11.0",
    "pytest-timeout>=2.0.0",  # For timeout support in CI
    "pytest-xdist>=3.0.0",  # For parallel test execution (-n auto)
    "coverage>=7.5.0",
    "respx>=0.20.0",  # For HTTP mocking in tests
]

# Integration test dependencies - adds performance monitoring and system metrics
integration = [
    "psutil>=5.8.0",  # Required for performance integration tests
]

# Performance test dependencies - system monitoring and benchmarking
performance = [
    "psutil>=5.8.0",  # System resource monitoring
    "memory-profiler>=0.60.0",  # Memory usage profiling
]

# PostgreSQL database support
postgres = [
    "asyncpg>=0.28.0",
    "psycopg2-binary>=2.9.0",
]

# Code quality and linting tools
quality = [
    "black>=23.0.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
]

# Development utilities
dev-tools = [
    "import-linter>=2.0.0",  # For architecture validation
    "vulture>=2.14",  # For dead code detection
]

# Complete development environment - includes everything
dev = [
    # Include all other dependency groups
    "marketpipe[test,integration,performance,postgres,quality,dev-tools]",
]

[project.scripts]
mp = "marketpipe.cli:app"
marketpipe = "marketpipe.cli:app"

[project.entry-points."marketpipe.providers"]
alpaca = "marketpipe.ingestion.infrastructure.adapters:AlpacaMarketDataAdapter"
iex = "marketpipe.ingestion.infrastructure.iex_adapter:IEXMarketDataAdapter"
fake = "marketpipe.ingestion.infrastructure.fake_adapter:FakeMarketDataAdapter"

[tool.setuptools]
license-files = ["LICENSE"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.sql"]

# Coverage configuration moved to .coveragerc to support parallel mode

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | build
  | dist
  | __pycache__
)/
'''

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"tests/**/*" = ["B018"]   # Allow "useless" expressions in tests

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Gradual typing
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
